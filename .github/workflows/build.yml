name: CI
env:
  TARGET_NAME: CoreGame
  CPM_SOURCE_CACHE: ${{ github.workspace }}/.cache/CPM
jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        config:
          - name: Ubuntu
            os: ubuntu-latest
            cmake_preset: ci-linux
            build_dir: build/linux
            dist_dir: dist/linux
          # - name: macOS
          #   os: macos-latest
          #   cmake_preset: ci-macos
          #   build_dir: build/macos
          #   dist_dir: dist/macos
          # - name: Windows
          #   os: windows-latest
          #   cmake_preset: ci-windows
          #   build_dir: build/windows
          #   dist_dir: dist/windows

    steps:
      - name: Fetch submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Get CPU count
        id: cpu-count
        run: |
          case $RUNNER_OS in
          Linux)
            cpus=$(nproc)
            ;;
          macOS)
            cpus=$(sysctl -n hw.ncpu)
            ;;
          Windows)
            cpus=${NUMBER_OF_PROCESSOR}
            ;;
          *)
            cpus=1
            ;;
          esac
          echo "Number of cores: ${cpus}"
          echo "cpus=${cpus}" >> $GITHUB_OUTPUT

      # - name: Get godot-cpp current commit
      #   id: godot-cpp-hash
      #   run: |
      #     cd godot-cpp
      #     echo "hash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Cache CMake build dir
        id: cmake-build-cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/${{ matrix.config.build_dir }}
            ${{ env.CPM_SOURCE_CACHE }}
          # key: ${{ runner.os }}-${{ steps.godot-cpp-hash.outputs.hash }}
          key: ${{ runner.os }}

      - name: Cmake configure
        if: steps.cmake-build-cache.outputs.cache-hit != 'true'
        run: cmake --preset ${{ matrix.config.cmake_preset }}

      - name: Build godot-cpp
        if: steps.cmake-build-cache.outputs.cache-hit != 'true'
        run: cmake --build
          --preset ${{ matrix.config.cmake_preset }}
          -j ${{ steps.cpu-count.outputs.cpus }}
          --target godot-cpp

      - name: Build CoreGame
        id: configure
        run: cmake --build
          --preset ${{ matrix.config.cmake_preset }}
          -j ${{ steps.cpu-count.outputs.cpus }}
          --target ${{ env.TARGET_NAME }}

on:
  workflow_dispatch:
  push:
    paths:
      - src/**
      - .github/**
