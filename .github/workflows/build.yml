name: CI
env:
  TARGET_NAME: CoreGame
jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        config:
          - name: Ubuntu
            os: ubuntu-latest
            cmake_preset: ci-linux
            build_dir: build/linux
            dist_dir: dist/linux
          - name: macOS
            os: macos-latest
            cmake_preset: ci-macos
            build_dir: build/macos
            dist_dir: dist/macos
          # - name: Windows
          #   os: windows-latest
          #   cmake_preset: ci-windows
          #   build_dir: build/windows
          #   dist_dir: dist/windows

    steps:
      - name: Fetch submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Get CPU count
        id: cpu-count
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            echo "nproc=${NUMBER_OF_PROCESSOR}" >> $GITHUB_OUTPUT
          else
            echo "nproc=$(nproc)" >> $GITHUB_OUTPUT
          fi
          echo "Number of cores: ${nproc}"

      - name: Get godot-cpp current commit
        id: godot-cpp-hash
        run: |
          cd godot-cpp
          echo "hash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Cmake configure
        run: cmake --preset ${{ matrix.config.cmake_preset }}

      - name: Cache godot-cpp
        id: godot-cpp-cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/${{ matrix.config.build_dir }}/godot-cpp
          key: ${{ runner.os }}-${{ steps.godot-cpp-hash.outputs.hash }}

      - name: Build godot-cpp
        if: steps.godot-cpp-cache.outputs.cache-hit != 'true'
        run: cmake --build \
          --preset ${{ matrix.config.cmake_preset }} \
          -j ${{ steps.cpu-count.outputs.nproc }} \
          --target godot-cpp

      - name: Build CoreGame
        id: configure
        run: cmake --build \
          --preset ${{ matrix.config.cmake_preset }} \
          -j ${{ steps.cpu-count.outputs.nproc }} \
          --target ${{ env.TARGET_NAME }}

on:
  workflow_dispatch:
  push:
    paths:
      - src/**
      - .github/**
